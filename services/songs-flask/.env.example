# services/songs-flask/.env.example
# Copy this file to `.env` and adjust values as needed. Do NOT commit `.env`.

# -----------------------------------------------------------------------------
# MongoDB bootstrap (used by Docker container on first start)
# -----------------------------------------------------------------------------
MONGO_INITDB_ROOT_USERNAME=admin
MONGO_INITDB_ROOT_PASSWORD=adminpass
MONGO_INITDB_DATABASE=app_db

# Host port to expose MongoDB (change if 27017 is busy)
MONGODB_PORT=27017

# Application user (created by init script /infra/mongo/init/01-init.js)
MONGO_APP_USERNAME=app_user
MONGO_APP_PASSWORD=app_pass

# Optional admin UI (mongo-express) basic auth
ME_UI_USER=meadmin
ME_UI_PASS=meadminpass

# -----------------------------------------------------------------------------
# Flask development settings
# -----------------------------------------------------------------------------
FLASK_ENV=development
PORT_SONGS=8002

# -----------------------------------------------------------------------------
# Mongo connection components for building MONGO_URI
# -----------------------------------------------------------------------------
MONGODB_HOST=localhost
MONGO_DB=app_db
# For app user, authSource should be the application DB (app_db).
# If you use root, set MONGO_AUTH_SOURCE=admin instead.
MONGO_AUTH_SOURCE=${MONGO_DB}

# Final connection string used by Flask; built from the components above.
MONGO_URI=mongodb://${MONGO_APP_USERNAME}:${MONGO_APP_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/${MONGO_DB}?authSource=${MONGO_AUTH_SOURCE}